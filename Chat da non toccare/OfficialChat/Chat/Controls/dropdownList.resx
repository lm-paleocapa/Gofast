<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="dropdownListItem2.itemImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EwAACxMBAJqcGAAABIxJREFUWEfVV2mIW1UUfq64kLx7MwNirXUUqxUXXCv+EsQiqFgqWlcouPxQKyr+
        EPFPpYgL/hBBVJRKQVECdibvvWjGKY1FUYvj0qmTvCU1DDO2M6Ot3Wwz05jrd+47Ie81yTSz+KMHPnKX
        c85377n3nndinHCi1hknF7PySs+Wt3u2+ZhnySc9W6zys8kbt/efczarLbwUneRtri02gGwSUG1QwaKy
        rmU+Ws73nMGm85PATt0Ex98cQ/SHZ4mtiMJnaG/0HPEViItRHSx2BONrKGLsanailHGSZ5mv1B36ttgL
        p+uDjLiG5ofTxunFXtHjZhKXupnuBI0FX6QWh0diFiKL2TzkmJLmO5bR9OIzYbiJHfwLvElOiEwvyhHD
        PBfFOMY/9B3zVpU3TqVjwNhfPBcUs4lL2P3xBTv4lA33+468w7MT3djZ++hXeXxGIFJfU6SwiAvR/02P
        O6JMfpiivfiWfIkdHQps89qCI68IjeMkHaDiOvJhHEsS7e16DPdmcNA4jamaxXe6LoMi7bLmO+Juz+5a
        hvY+bTxHuI54pJAVF6CtXw+i8wzTNQsmLW3oiI92DkgT7UD354fp8CWZ93H/T4oKUzaEwh0qmEdKfanz
        fVu+zgYzQLYYa4lfVNo4BUfwY9iXLzJtQ+pPDlHYgGe1CG0klSZHMRzcbamxbfe2nDsWuFsP4FKupjY4
        fmLahuCd79CTjrgLK1wbNW6HqQNFRXJool+Vt1zXUqcBZEjkC7T1xijKTG0YlMNZsUo5wLVlP/fV6Pcr
        1fjQcy1xtDKuF0BSq02rvaW3VfDlkghpDFPMM0B9igbTG0bBTi5lpTHqI0Qj3Ff7x9JM0ZlUK5Nq/Ne1
        uMipKLlGYKUux+8H1Eakn9XkJIElbmalbZS78TvN/VkvoC5H9v2sRr5dEVsAZUm8sJepjSi/wfT/zwLo
        foz+sKqzBSzoEUztURM7ngdZd4yc0PYIdtmLzmKlKrWRA3Lc7/gSqlpV/f37e6qU64mRRlBpewlJMDgU
        ToiVeIZPUft4aDzDAVXOL2+pE4EdfYb06WbqUBD29VoRabiQ6z6XMiIbtsWBXX1IRPe0nGsGUrEj76c2
        cs4g0zbEz4qrWbmy05ZLYPBqw7gdOkvFlPkoFdOv7jvmC0wbF0z2stHG8DMqXe7PB1OenVyOe/Ug9yfr
        FVST6IrHFkdJkS4JVTFUirHh3IC6kAsTXR3hM/8007UWCg8pIlz/uFnzeq4RStrZ7HCYzp0+6/XvDLAl
        j3KNqdoLDD5mg4P0KoZzyZTnmO+gr6PTATa7GXlVKZO8GIuoV8sl8sMUMwvV9DizNBvWsKC3ipsSXaFD
        sQ6gEouK1SjpmGub71JWpV2iHHsCY3vCOemSLbvvTHRZHpLVQicoUC35Gl0omiMSlGznIb1eRF9QstFl
        Okou6Hpsgycnc+VeIbTTuYhnJW9ABPJ1h4wJ7PY7VDif4/cTno/fExSyyPcP0WLZ1fwEN/mWsDQ3d8eI
        4jgM4j66+fTHhU0XVmhH9DL8jLmCiLCgx3E0d1JNWT+KE0gM4z9wZQ1tUQp6YAAAAABJRU5ErkJggg==
</value>
  </data>
</root>